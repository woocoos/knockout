package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/woocoos/knockout/ent"
)

// IsSystemRole is the resolver for the isSystemRole field.
func (r *orgRoleResolver) IsSystemRole(ctx context.Context, obj *ent.OrgRole) (bool, error) {
	return obj.AppRoleID > 0, nil
}

// LoginProfile is the resolver for the loginProfile field.
func (r *createUserInputResolver) LoginProfile(ctx context.Context, obj *ent.CreateUserInput, data *ent.CreateUserLoginProfileInput) error {
	if data != nil {
		row, err := ent.FromContext(ctx).UserLoginProfile.Create().SetInput(*data).Save(ctx)
		if err != nil {
			return err
		}
		obj.LoginProfileID = &row.ID
	}
	return nil
}

// Password is the resolver for the password field.
func (r *createUserInputResolver) Password(ctx context.Context, obj *ent.CreateUserInput, data *ent.CreateUserPasswordInput) error {
	if data != nil {
		row, err := r.Resource.CreateUserPassword(ctx, data)
		if err != nil {
			return err
		}
		obj.PasswordIDs = append(obj.PasswordIDs, row.ID)
	}
	return nil
}
