directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type App implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """名称"""
  name: String!
  """用于标识应用资源的唯一代码,尽量简短"""
  code: String!
  """应用类型"""
  kind: AppKind!
  """回调地址"""
  redirectURI: String
  """应用ID"""
  appKey: String
  """应用密钥"""
  appSecret: String
  """权限范围"""
  scopes: String
  """token有效期"""
  tokenValidity: Int
  """refresh_token有效期"""
  refreshTokenValidity: Int
  """图标"""
  logo: String
  """备注"""
  comments: String
  """状态"""
  status: AppSimpleStatus
  menus(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for AppMenus returned from the connection."""
    orderBy: AppMenuOrder

    """Filtering options for AppMenus returned from the connection."""
    where: AppMenuWhereInput
  ): AppMenuConnection!
  actions(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for AppActions returned from the connection."""
    orderBy: AppActionOrder

    """Filtering options for AppActions returned from the connection."""
    where: AppActionWhereInput
  ): AppActionConnection!
  resources(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for AppResSlice returned from the connection."""
    orderBy: AppResOrder

    """Filtering options for AppResSlice returned from the connection."""
    where: AppResWhereInput
  ): AppResConnection!
  """角色"""
  roles: [AppRole!]
  """策略"""
  policies: [AppPolicy!]
  orgs(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Orgs returned from the connection."""
    orderBy: OrgOrder

    """Filtering options for Orgs returned from the connection."""
    where: OrgWhereInput
  ): OrgConnection!
}
type AppAction implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """所属应用"""
  appID: ID
  """名称"""
  name: String!
  """restful,graphql,rpc"""
  kind: AppActionKind!
  """操作方法:读,写,列表"""
  method: AppActionMethod!
  """备注"""
  comments: String
  app: App
  """被引用的菜单项"""
  menus: [AppMenu!]
  """引用的资源"""
  resources: [AppRes!]
}
"""A connection to a list of items."""
type AppActionConnection {
  """A list of edges."""
  edges: [AppActionEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AppActionEdge {
  """The item at the end of the edge."""
  node: AppAction
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""AppActionKind is enum for the field kind"""
enum AppActionKind @goModel(model: "github.com/woocoos/knockout/ent/appaction.Kind") {
  restful
  graphql
  rpc
}
"""AppActionMethod is enum for the field method"""
enum AppActionMethod @goModel(model: "github.com/woocoos/knockout/ent/appaction.Method") {
  read
  write
  list
}
"""Ordering options for AppAction connections"""
input AppActionOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AppActions."""
  field: AppActionOrderField!
}
"""Properties by which AppAction connections can be ordered."""
enum AppActionOrderField {
  createdAt
}
"""
AppActionWhereInput is used for filtering AppAction objects.
Input was generated by ent.
"""
input AppActionWhereInput {
  not: AppActionWhereInput
  and: [AppActionWhereInput!]
  or: [AppActionWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: ID
  appIDNEQ: ID
  appIDIn: [ID!]
  appIDNotIn: [ID!]
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """kind field predicates"""
  kind: AppActionKind
  kindNEQ: AppActionKind
  kindIn: [AppActionKind!]
  kindNotIn: [AppActionKind!]
  """method field predicates"""
  method: AppActionMethod
  methodNEQ: AppActionMethod
  methodIn: [AppActionMethod!]
  methodNotIn: [AppActionMethod!]
  """app edge predicates"""
  hasApp: Boolean
  hasAppWith: [AppWhereInput!]
  """menus edge predicates"""
  hasMenus: Boolean
  hasMenusWith: [AppMenuWhereInput!]
  """resources edge predicates"""
  hasResources: Boolean
  hasResourcesWith: [AppResWhereInput!]
}
"""A connection to a list of items."""
type AppConnection {
  """A list of edges."""
  edges: [AppEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AppEdge {
  """The item at the end of the edge."""
  node: App
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""AppKind is enum for the field kind"""
enum AppKind @goModel(model: "github.com/woocoos/knockout/ent/app.Kind") {
  web
  native
  server
}
type AppMenu implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """所属应用"""
  appID: ID
  """父级ID"""
  parentID: Int!
  """目录,菜单项"""
  kind: AppMenuKind!
  """菜单名称"""
  name: String!
  """操作ID"""
  actionID: ID
  """备注"""
  comments: String
  displaySort: Int
  app: App
  """需要权限控制时对应的权限"""
  action: AppAction
}
"""A connection to a list of items."""
type AppMenuConnection {
  """A list of edges."""
  edges: [AppMenuEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AppMenuEdge {
  """The item at the end of the edge."""
  node: AppMenu
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""AppMenuKind is enum for the field kind"""
enum AppMenuKind @goModel(model: "github.com/woocoos/knockout/ent/appmenu.Kind") {
  dir
  menu
}
"""Ordering options for AppMenu connections"""
input AppMenuOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AppMenus."""
  field: AppMenuOrderField!
}
"""Properties by which AppMenu connections can be ordered."""
enum AppMenuOrderField {
  createdAt
  displaySort
}
"""
AppMenuWhereInput is used for filtering AppMenu objects.
Input was generated by ent.
"""
input AppMenuWhereInput {
  not: AppMenuWhereInput
  and: [AppMenuWhereInput!]
  or: [AppMenuWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: ID
  appIDNEQ: ID
  appIDIn: [ID!]
  appIDNotIn: [ID!]
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  """parent_id field predicates"""
  parentID: Int
  parentIDNEQ: Int
  parentIDIn: [Int!]
  parentIDNotIn: [Int!]
  parentIDGT: Int
  parentIDGTE: Int
  parentIDLT: Int
  parentIDLTE: Int
  """kind field predicates"""
  kind: AppMenuKind
  kindNEQ: AppMenuKind
  kindIn: [AppMenuKind!]
  kindNotIn: [AppMenuKind!]
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """action_id field predicates"""
  actionID: ID
  actionIDNEQ: ID
  actionIDIn: [ID!]
  actionIDNotIn: [ID!]
  actionIDIsNil: Boolean
  actionIDNotNil: Boolean
  """app edge predicates"""
  hasApp: Boolean
  hasAppWith: [AppWhereInput!]
  """action edge predicates"""
  hasAction: Boolean
  hasActionWith: [AppActionWhereInput!]
}
"""Ordering options for App connections"""
input AppOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Apps."""
  field: AppOrderField!
}
"""Properties by which App connections can be ordered."""
enum AppOrderField {
  createdAt
}
type AppPolicy implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """所属应用"""
  appID: ID
  """策略名称"""
  name: String!
  """描述"""
  comments: String
  """策略规则"""
  rules: [PolicyRule!]!
  """版本号"""
  version: String!
  """标识是否自动授予到账户"""
  autoGrant: Boolean!
  """状态"""
  status: AppPolicySimpleStatus
  app: App
  roles: [AppRole!]
}
"""A connection to a list of items."""
type AppPolicyConnection {
  """A list of edges."""
  edges: [AppPolicyEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AppPolicyEdge {
  """The item at the end of the edge."""
  node: AppPolicy
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for AppPolicy connections"""
input AppPolicyOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AppPolicies."""
  field: AppPolicyOrderField!
}
"""Properties by which AppPolicy connections can be ordered."""
enum AppPolicyOrderField {
  createdAt
}
"""AppPolicySimpleStatus is enum for the field status"""
enum AppPolicySimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
AppPolicyWhereInput is used for filtering AppPolicy objects.
Input was generated by ent.
"""
input AppPolicyWhereInput {
  not: AppPolicyWhereInput
  and: [AppPolicyWhereInput!]
  or: [AppPolicyWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: ID
  appIDNEQ: ID
  appIDIn: [ID!]
  appIDNotIn: [ID!]
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """comments field predicates"""
  comments: String
  commentsNEQ: String
  commentsIn: [String!]
  commentsNotIn: [String!]
  commentsGT: String
  commentsGTE: String
  commentsLT: String
  commentsLTE: String
  commentsContains: String
  commentsHasPrefix: String
  commentsHasSuffix: String
  commentsIsNil: Boolean
  commentsNotNil: Boolean
  commentsEqualFold: String
  commentsContainsFold: String
  """version field predicates"""
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionEqualFold: String
  versionContainsFold: String
  """auto_grant field predicates"""
  autoGrant: Boolean
  autoGrantNEQ: Boolean
  """status field predicates"""
  status: AppPolicySimpleStatus
  statusNEQ: AppPolicySimpleStatus
  statusIn: [AppPolicySimpleStatus!]
  statusNotIn: [AppPolicySimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """app edge predicates"""
  hasApp: Boolean
  hasAppWith: [AppWhereInput!]
  """roles edge predicates"""
  hasRoles: Boolean
  hasRolesWith: [AppRoleWhereInput!]
  """app_role_policy edge predicates"""
  hasAppRolePolicy: Boolean
  hasAppRolePolicyWith: [AppRolePolicyWhereInput!]
}
type AppRes implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """所属应用"""
  appID: ID
  """资源名称"""
  name: String!
  """资源类型名称,如数据库表名"""
  typeName: String!
  """应用资源表达式"""
  arnPattern: String!
  app: App
}
"""A connection to a list of items."""
type AppResConnection {
  """A list of edges."""
  edges: [AppResEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AppResEdge {
  """The item at the end of the edge."""
  node: AppRes
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for AppRes connections"""
input AppResOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AppResSlice."""
  field: AppResOrderField!
}
"""Properties by which AppRes connections can be ordered."""
enum AppResOrderField {
  createdAt
}
"""
AppResWhereInput is used for filtering AppRes objects.
Input was generated by ent.
"""
input AppResWhereInput {
  not: AppResWhereInput
  and: [AppResWhereInput!]
  or: [AppResWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: ID
  appIDNEQ: ID
  appIDIn: [ID!]
  appIDNotIn: [ID!]
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """type_name field predicates"""
  typeName: String
  typeNameNEQ: String
  typeNameIn: [String!]
  typeNameNotIn: [String!]
  typeNameGT: String
  typeNameGTE: String
  typeNameLT: String
  typeNameLTE: String
  typeNameContains: String
  typeNameHasPrefix: String
  typeNameHasSuffix: String
  typeNameEqualFold: String
  typeNameContainsFold: String
  """arn_pattern field predicates"""
  arnPattern: String
  arnPatternNEQ: String
  arnPatternIn: [String!]
  arnPatternNotIn: [String!]
  arnPatternGT: String
  arnPatternGTE: String
  arnPatternLT: String
  arnPatternLTE: String
  arnPatternContains: String
  arnPatternHasPrefix: String
  arnPatternHasSuffix: String
  arnPatternEqualFold: String
  arnPatternContainsFold: String
  """app edge predicates"""
  hasApp: Boolean
  hasAppWith: [AppWhereInput!]
}
type AppRole implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """所属应用"""
  appID: ID
  """角色名称"""
  name: String!
  """备注"""
  comments: String
  """标识是否自动授予到账户"""
  autoGrant: Boolean!
  """授权后是否可编辑"""
  editable: Boolean!
  app: App
  """权限授权策略"""
  policies: [AppPolicy!]
}
"""Ordering options for AppRole connections"""
input AppRoleOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AppRoles."""
  field: AppRoleOrderField!
}
"""Properties by which AppRole connections can be ordered."""
enum AppRoleOrderField {
  createdAt
}
"""Ordering options for AppRolePolicy connections"""
input AppRolePolicyOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AppRolePolicies."""
  field: AppRolePolicyOrderField!
}
"""Properties by which AppRolePolicy connections can be ordered."""
enum AppRolePolicyOrderField {
  createdAt
}
"""
AppRolePolicyWhereInput is used for filtering AppRolePolicy objects.
Input was generated by ent.
"""
input AppRolePolicyWhereInput {
  not: AppRolePolicyWhereInput
  and: [AppRolePolicyWhereInput!]
  or: [AppRolePolicyWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: Int
  appIDNEQ: Int
  appIDIn: [Int!]
  appIDNotIn: [Int!]
  appIDGT: Int
  appIDGTE: Int
  appIDLT: Int
  appIDLTE: Int
}
"""
AppRoleWhereInput is used for filtering AppRole objects.
Input was generated by ent.
"""
input AppRoleWhereInput {
  not: AppRoleWhereInput
  and: [AppRoleWhereInput!]
  or: [AppRoleWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: ID
  appIDNEQ: ID
  appIDIn: [ID!]
  appIDNotIn: [ID!]
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """auto_grant field predicates"""
  autoGrant: Boolean
  autoGrantNEQ: Boolean
  """editable field predicates"""
  editable: Boolean
  editableNEQ: Boolean
  """app edge predicates"""
  hasApp: Boolean
  hasAppWith: [AppWhereInput!]
  """policies edge predicates"""
  hasPolicies: Boolean
  hasPoliciesWith: [AppPolicyWhereInput!]
  """app_role_policy edge predicates"""
  hasAppRolePolicy: Boolean
  hasAppRolePolicyWith: [AppRolePolicyWhereInput!]
}
"""AppSimpleStatus is enum for the field status"""
enum AppSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
AppWhereInput is used for filtering App objects.
Input was generated by ent.
"""
input AppWhereInput {
  not: AppWhereInput
  and: [AppWhereInput!]
  or: [AppWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """code field predicates"""
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeEqualFold: String
  codeContainsFold: String
  """kind field predicates"""
  kind: AppKind
  kindNEQ: AppKind
  kindIn: [AppKind!]
  kindNotIn: [AppKind!]
  """redirect_uri field predicates"""
  redirectURI: String
  redirectURINEQ: String
  redirectURIIn: [String!]
  redirectURINotIn: [String!]
  redirectURIGT: String
  redirectURIGTE: String
  redirectURILT: String
  redirectURILTE: String
  redirectURIContains: String
  redirectURIHasPrefix: String
  redirectURIHasSuffix: String
  redirectURIIsNil: Boolean
  redirectURINotNil: Boolean
  redirectURIEqualFold: String
  redirectURIContainsFold: String
  """app_key field predicates"""
  appKey: String
  appKeyNEQ: String
  appKeyIn: [String!]
  appKeyNotIn: [String!]
  appKeyGT: String
  appKeyGTE: String
  appKeyLT: String
  appKeyLTE: String
  appKeyContains: String
  appKeyHasPrefix: String
  appKeyHasSuffix: String
  appKeyIsNil: Boolean
  appKeyNotNil: Boolean
  appKeyEqualFold: String
  appKeyContainsFold: String
  """app_secret field predicates"""
  appSecret: String
  appSecretNEQ: String
  appSecretIn: [String!]
  appSecretNotIn: [String!]
  appSecretGT: String
  appSecretGTE: String
  appSecretLT: String
  appSecretLTE: String
  appSecretContains: String
  appSecretHasPrefix: String
  appSecretHasSuffix: String
  appSecretIsNil: Boolean
  appSecretNotNil: Boolean
  appSecretEqualFold: String
  appSecretContainsFold: String
  """scopes field predicates"""
  scopes: String
  scopesNEQ: String
  scopesIn: [String!]
  scopesNotIn: [String!]
  scopesGT: String
  scopesGTE: String
  scopesLT: String
  scopesLTE: String
  scopesContains: String
  scopesHasPrefix: String
  scopesHasSuffix: String
  scopesIsNil: Boolean
  scopesNotNil: Boolean
  scopesEqualFold: String
  scopesContainsFold: String
  """token_validity field predicates"""
  tokenValidity: Int
  tokenValidityNEQ: Int
  tokenValidityIn: [Int!]
  tokenValidityNotIn: [Int!]
  tokenValidityGT: Int
  tokenValidityGTE: Int
  tokenValidityLT: Int
  tokenValidityLTE: Int
  tokenValidityIsNil: Boolean
  tokenValidityNotNil: Boolean
  """refresh_token_validity field predicates"""
  refreshTokenValidity: Int
  refreshTokenValidityNEQ: Int
  refreshTokenValidityIn: [Int!]
  refreshTokenValidityNotIn: [Int!]
  refreshTokenValidityGT: Int
  refreshTokenValidityGTE: Int
  refreshTokenValidityLT: Int
  refreshTokenValidityLTE: Int
  refreshTokenValidityIsNil: Boolean
  refreshTokenValidityNotNil: Boolean
  """logo field predicates"""
  logo: String
  logoNEQ: String
  logoIn: [String!]
  logoNotIn: [String!]
  logoGT: String
  logoGTE: String
  logoLT: String
  logoLTE: String
  logoContains: String
  logoHasPrefix: String
  logoHasSuffix: String
  logoIsNil: Boolean
  logoNotNil: Boolean
  logoEqualFold: String
  logoContainsFold: String
  """comments field predicates"""
  comments: String
  commentsNEQ: String
  commentsIn: [String!]
  commentsNotIn: [String!]
  commentsGT: String
  commentsGTE: String
  commentsLT: String
  commentsLTE: String
  commentsContains: String
  commentsHasPrefix: String
  commentsHasSuffix: String
  commentsIsNil: Boolean
  commentsNotNil: Boolean
  commentsEqualFold: String
  commentsContainsFold: String
  """status field predicates"""
  status: AppSimpleStatus
  statusNEQ: AppSimpleStatus
  statusIn: [AppSimpleStatus!]
  statusNotIn: [AppSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """menus edge predicates"""
  hasMenus: Boolean
  hasMenusWith: [AppMenuWhereInput!]
  """actions edge predicates"""
  hasActions: Boolean
  hasActionsWith: [AppActionWhereInput!]
  """resources edge predicates"""
  hasResources: Boolean
  hasResourcesWith: [AppResWhereInput!]
  """roles edge predicates"""
  hasRoles: Boolean
  hasRolesWith: [AppRoleWhereInput!]
  """policies edge predicates"""
  hasPolicies: Boolean
  hasPoliciesWith: [AppPolicyWhereInput!]
  """orgs edge predicates"""
  hasOrgs: Boolean
  hasOrgsWith: [OrgWhereInput!]
}
"""
CreateAppActionInput is used for create AppAction object.
Input was generated by ent.
"""
input CreateAppActionInput {
  """名称"""
  name: String!
  """restful,graphql,rpc"""
  kind: AppActionKind!
  """操作方法:读,写,列表"""
  method: AppActionMethod!
  """备注"""
  comments: String
  appID: ID
  menuIDs: [ID!]
  resourceIDs: [ID!]
}
"""
CreateAppInput is used for create App object.
Input was generated by ent.
"""
input CreateAppInput {
  """名称"""
  name: String!
  """用于标识应用资源的唯一代码,尽量简短"""
  code: String!
  """应用类型"""
  kind: AppKind!
  """回调地址"""
  redirectURI: String
  """应用ID"""
  appKey: String
  """应用密钥"""
  appSecret: String
  """权限范围"""
  scopes: String
  """token有效期"""
  tokenValidity: Int
  """refresh_token有效期"""
  refreshTokenValidity: Int
  """图标"""
  logo: String
  """备注"""
  comments: String
  """状态"""
  status: AppSimpleStatus
  menuIDs: [ID!]
  actionIDs: [ID!]
  resourceIDs: [ID!]
  roleIDs: [ID!]
  policyIDs: [ID!]
}
"""
CreateAppMenuInput is used for create AppMenu object.
Input was generated by ent.
"""
input CreateAppMenuInput {
  """父级ID"""
  parentID: Int!
  """目录,菜单项"""
  kind: AppMenuKind!
  """菜单名称"""
  name: String!
  """备注"""
  comments: String
  appID: ID
  actionID: ID
}
"""
CreateAppPolicyInput is used for create AppPolicy object.
Input was generated by ent.
"""
input CreateAppPolicyInput {
  """策略名称"""
  name: String!
  """描述"""
  comments: String
  """策略规则"""
  rules: [PolicyRuleInput!]!
  """版本号"""
  version: String!
  """标识是否自动授予到账户"""
  autoGrant: Boolean
  """状态"""
  status: AppPolicySimpleStatus
  appID: ID
  roleIDs: [ID!]
}
"""
CreateAppResInput is used for create AppRes object.
Input was generated by ent.
"""
input CreateAppResInput {
  """资源名称"""
  name: String!
  """资源类型名称,如数据库表名"""
  typeName: String!
  """应用资源表达式"""
  arnPattern: String!
  appID: ID
}
"""
CreateAppRoleInput is used for create AppRole object.
Input was generated by ent.
"""
input CreateAppRoleInput {
  """角色名称"""
  name: String!
  """备注"""
  comments: String
  """标识是否自动授予到账户"""
  autoGrant: Boolean
  """授权后是否可编辑"""
  editable: Boolean
  appID: ID
  policyIDs: [ID!]
}
"""
CreateOrgInput is used for create Org object.
Input was generated by ent.
"""
input CreateOrgInput {
  """默认域名"""
  domain: String
  """组织名称"""
  name: String!
  """简介"""
  profile: String
  """状态"""
  status: OrgSimpleStatus
  """国家或地区2字码"""
  countryCode: String
  """时区"""
  timezone: String
  parentID: ID!
  childIDs: [ID!]
  ownerID: ID
  userIDs: [ID!]
  rolesAndGroupIDs: [ID!]
  permissionIDs: [ID!]
  policyIDs: [ID!]
  appIDs: [ID!]
}
"""
CreateOrgPolicyInput is used for create OrgPolicy object.
Input was generated by ent.
"""
input CreateOrgPolicyInput {
  """所属应用策略,如果是自定义应用策略,则为空"""
  appPolicyID: Int
  """策略名称"""
  name: String!
  """描述"""
  comments: String
  """策略规则,如果是应用策略,则为空"""
  rules: [PolicyRuleInput!]!
  orgID: ID!
  permissionIDs: [ID!]
}
"""
CreateOrgRoleInput is used for create OrgRole object.
Input was generated by ent.
"""
input CreateOrgRoleInput {
  """类型,group:组,role:角色"""
  kind: OrgRoleKind!
  """名称"""
  name: String!
  """备注"""
  comments: String
  orgID: ID
}
"""
CreateOrgUserInput is used for create OrgUser object.
Input was generated by ent.
"""
input CreateOrgUserInput {
  """加入时间"""
  joinedAt: Time
  """在组织内的显示名称"""
  displayName: String!
  orgID: ID!
  userID: ID!
}
"""
CreatePermissionInput is used for create Permission object.
Input was generated by ent.
"""
input CreatePermissionInput {
  """授权类型:角色,用户"""
  principalKind: PermissionPrincipalKind!
  """授权类型为角色或用户组的ID"""
  roleID: Int
  """生效开始时间"""
  startAt: Time
  """生效结束时间"""
  endAt: Time
  orgID: ID!
  userID: ID
  orgPolicyID: ID!
}
"""
CreateUserIdentityInput is used for create UserIdentity object.
Input was generated by ent.
"""
input CreateUserIdentityInput {
  """身份标识类型 手机、邮箱、用户名、微信、qq"""
  kind: UserIdentityKind!
  """用户名、邮箱、手机、unionid、qq"""
  code: String
  """扩展标识码,比如微信的openID"""
  codeExtend: String
  """状态,部分登陆方式需要验证通过才可启用"""
  status: UserIdentitySimpleStatus
  userID: ID
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  """登陆名称"""
  principalName: String!
  """显示名"""
  displayName: String!
  """邮箱"""
  email: String
  """手机"""
  mobile: String
  """状态"""
  status: UserSimpleStatus
  """备注"""
  comments: String
  identityIDs: [ID!]
  loginProfileID: ID
  passwordIDs: [ID!]
  deviceIDs: [ID!]
}
"""
CreateUserLoginProfileInput is used for create UserLoginProfile object.
Input was generated by ent.
"""
input CreateUserLoginProfileInput {
  """是否允许使用密码登陆控制台"""
  canLogin: Boolean
  """设置密码:keep-保持不变,customer-客户自行设置,auto-自动生成"""
  setKind: UserLoginProfileSetKind!
  """下次登陆时需要重置密码"""
  passwordReset: Boolean
  """是否开启设备认证"""
  verifyDevice: Boolean!
  """是否开启多因素验证"""
  mfaEnabled: Boolean
  """多因素验证密钥BASE32"""
  mfaSecret: String
  """多因素验证状态"""
  mfaStatus: UserLoginProfileSimpleStatus
  userID: ID
}
"""
CreateUserPasswordInput is used for create UserPassword object.
Input was generated by ent.
"""
input CreateUserPasswordInput {
  """场景: login 普通登陆"""
  scene: UserPasswordScene!
  """密码"""
  password: String
  """生效状态,默认生效"""
  status: UserPasswordSimpleStatus
  userID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/woocoos/knockout/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
type Org implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  deletedAt: Time
  """管理账户ID,如果设置则该组织将升级为根组织"""
  ownerID: ID
  """父级ID,0为根组织."""
  parentID: ID!
  """默认域名"""
  domain: String
  """系统代码"""
  code: String
  """组织名称"""
  name: String!
  """简介"""
  profile: String
  """状态"""
  status: OrgSimpleStatus
  """路径编码"""
  path: String
  displaySort: Int
  """国家或地区2字码"""
  countryCode: String
  """时区"""
  timezone: String
  parent: Org!
  children: [Org!]
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Users returned from the connection."""
    orderBy: UserOrder

    """Filtering options for Users returned from the connection."""
    where: UserWhereInput
  ): UserConnection!
  permissions(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Permissions returned from the connection."""
    orderBy: PermissionOrder

    """Filtering options for Permissions returned from the connection."""
    where: PermissionWhereInput
  ): PermissionConnection!
  policies(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for OrgPolicies returned from the connection."""
    orderBy: OrgPolicyOrder

    """Filtering options for OrgPolicies returned from the connection."""
    where: OrgPolicyWhereInput
  ): OrgPolicyConnection!
  apps(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Apps returned from the connection."""
    orderBy: AppOrder

    """Filtering options for Apps returned from the connection."""
    where: AppWhereInput
  ): AppConnection!
}
"""A connection to a list of items."""
type OrgConnection {
  """A list of edges."""
  edges: [OrgEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type OrgEdge {
  """The item at the end of the edge."""
  node: Org
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Org connections"""
input OrgOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Orgs."""
  field: OrgOrderField!
}
"""Properties by which Org connections can be ordered."""
enum OrgOrderField {
  createdAt
  displaySort
}
type OrgPolicy implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """组织ID"""
  orgID: ID!
  """所属应用策略,如果是自定义应用策略,则为空"""
  appPolicyID: Int
  """策略名称"""
  name: String!
  """描述"""
  comments: String
  """策略规则,如果是应用策略,则为空"""
  rules: [PolicyRule!]!
  org: Org!
  permissions: [Permission!]
}
"""A connection to a list of items."""
type OrgPolicyConnection {
  """A list of edges."""
  edges: [OrgPolicyEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type OrgPolicyEdge {
  """The item at the end of the edge."""
  node: OrgPolicy
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for OrgPolicy connections"""
input OrgPolicyOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order OrgPolicies."""
  field: OrgPolicyOrderField!
}
"""Properties by which OrgPolicy connections can be ordered."""
enum OrgPolicyOrderField {
  createdAt
}
"""
OrgPolicyWhereInput is used for filtering OrgPolicy objects.
Input was generated by ent.
"""
input OrgPolicyWhereInput {
  not: OrgPolicyWhereInput
  and: [OrgPolicyWhereInput!]
  or: [OrgPolicyWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """org_id field predicates"""
  orgID: ID
  orgIDNEQ: ID
  orgIDIn: [ID!]
  orgIDNotIn: [ID!]
  """app_policy_id field predicates"""
  appPolicyID: Int
  appPolicyIDNEQ: Int
  appPolicyIDIn: [Int!]
  appPolicyIDNotIn: [Int!]
  appPolicyIDGT: Int
  appPolicyIDGTE: Int
  appPolicyIDLT: Int
  appPolicyIDLTE: Int
  appPolicyIDIsNil: Boolean
  appPolicyIDNotNil: Boolean
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """comments field predicates"""
  comments: String
  commentsNEQ: String
  commentsIn: [String!]
  commentsNotIn: [String!]
  commentsGT: String
  commentsGTE: String
  commentsLT: String
  commentsLTE: String
  commentsContains: String
  commentsHasPrefix: String
  commentsHasSuffix: String
  commentsIsNil: Boolean
  commentsNotNil: Boolean
  commentsEqualFold: String
  commentsContainsFold: String
  """org edge predicates"""
  hasOrg: Boolean
  hasOrgWith: [OrgWhereInput!]
  """permissions edge predicates"""
  hasPermissions: Boolean
  hasPermissionsWith: [PermissionWhereInput!]
}
type OrgRole implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """组织ID"""
  orgID: ID
  """类型,group:组,role:角色"""
  kind: OrgRoleKind!
  """名称"""
  name: String!
  """备注"""
  comments: String
}
"""OrgRoleKind is enum for the field kind"""
enum OrgRoleKind @goModel(model: "github.com/woocoos/knockout/ent/orgrole.Kind") {
  group
  role
}
"""Ordering options for OrgRole connections"""
input OrgRoleOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order OrgRoles."""
  field: OrgRoleOrderField!
}
"""Properties by which OrgRole connections can be ordered."""
enum OrgRoleOrderField {
  createdAt
}
"""Ordering options for OrgRoleUser connections"""
input OrgRoleUserOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order OrgRoleUsers."""
  field: OrgRoleUserOrderField!
}
"""Properties by which OrgRoleUser connections can be ordered."""
enum OrgRoleUserOrderField {
  createdAt
}
"""
OrgRoleUserWhereInput is used for filtering OrgRoleUser objects.
Input was generated by ent.
"""
input OrgRoleUserWhereInput {
  not: OrgRoleUserWhereInput
  and: [OrgRoleUserWhereInput!]
  or: [OrgRoleUserWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
}
"""
OrgRoleWhereInput is used for filtering OrgRole objects.
Input was generated by ent.
"""
input OrgRoleWhereInput {
  not: OrgRoleWhereInput
  and: [OrgRoleWhereInput!]
  or: [OrgRoleWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """org_id field predicates"""
  orgID: ID
  orgIDNEQ: ID
  orgIDIn: [ID!]
  orgIDNotIn: [ID!]
  orgIDIsNil: Boolean
  orgIDNotNil: Boolean
  """kind field predicates"""
  kind: OrgRoleKind
  kindNEQ: OrgRoleKind
  kindIn: [OrgRoleKind!]
  kindNotIn: [OrgRoleKind!]
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """org edge predicates"""
  hasOrg: Boolean
  hasOrgWith: [OrgWhereInput!]
}
"""OrgSimpleStatus is enum for the field status"""
enum OrgSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""Ordering options for OrgUser connections"""
input OrgUserOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order OrgUsers."""
  field: OrgUserOrderField!
}
"""Properties by which OrgUser connections can be ordered."""
enum OrgUserOrderField {
  createdAt
}
"""
OrgUserWhereInput is used for filtering OrgUser objects.
Input was generated by ent.
"""
input OrgUserWhereInput {
  not: OrgUserWhereInput
  and: [OrgUserWhereInput!]
  or: [OrgUserWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """joined_at field predicates"""
  joinedAt: Time
  joinedAtNEQ: Time
  joinedAtIn: [Time!]
  joinedAtNotIn: [Time!]
  joinedAtGT: Time
  joinedAtGTE: Time
  joinedAtLT: Time
  joinedAtLTE: Time
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
}
"""
OrgWhereInput is used for filtering Org objects.
Input was generated by ent.
"""
input OrgWhereInput {
  not: OrgWhereInput
  and: [OrgWhereInput!]
  or: [OrgWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """deleted_at field predicates"""
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """owner_id field predicates"""
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  """parent_id field predicates"""
  parentID: ID
  parentIDNEQ: ID
  parentIDIn: [ID!]
  parentIDNotIn: [ID!]
  """domain field predicates"""
  domain: String
  domainNEQ: String
  domainIn: [String!]
  domainNotIn: [String!]
  domainGT: String
  domainGTE: String
  domainLT: String
  domainLTE: String
  domainContains: String
  domainHasPrefix: String
  domainHasSuffix: String
  domainIsNil: Boolean
  domainNotNil: Boolean
  domainEqualFold: String
  domainContainsFold: String
  """code field predicates"""
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIsNil: Boolean
  codeNotNil: Boolean
  codeEqualFold: String
  codeContainsFold: String
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """status field predicates"""
  status: OrgSimpleStatus
  statusNEQ: OrgSimpleStatus
  statusIn: [OrgSimpleStatus!]
  statusNotIn: [OrgSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """path field predicates"""
  path: String
  pathNEQ: String
  pathIn: [String!]
  pathNotIn: [String!]
  pathGT: String
  pathGTE: String
  pathLT: String
  pathLTE: String
  pathContains: String
  pathHasPrefix: String
  pathHasSuffix: String
  pathIsNil: Boolean
  pathNotNil: Boolean
  pathEqualFold: String
  pathContainsFold: String
  """country_code field predicates"""
  countryCode: String
  countryCodeNEQ: String
  countryCodeIn: [String!]
  countryCodeNotIn: [String!]
  countryCodeGT: String
  countryCodeGTE: String
  countryCodeLT: String
  countryCodeLTE: String
  countryCodeContains: String
  countryCodeHasPrefix: String
  countryCodeHasSuffix: String
  countryCodeIsNil: Boolean
  countryCodeNotNil: Boolean
  countryCodeEqualFold: String
  countryCodeContainsFold: String
  """timezone field predicates"""
  timezone: String
  timezoneNEQ: String
  timezoneIn: [String!]
  timezoneNotIn: [String!]
  timezoneGT: String
  timezoneGTE: String
  timezoneLT: String
  timezoneLTE: String
  timezoneContains: String
  timezoneHasPrefix: String
  timezoneHasSuffix: String
  timezoneIsNil: Boolean
  timezoneNotNil: Boolean
  timezoneEqualFold: String
  timezoneContainsFold: String
  """parent edge predicates"""
  hasParent: Boolean
  hasParentWith: [OrgWhereInput!]
  """children edge predicates"""
  hasChildren: Boolean
  hasChildrenWith: [OrgWhereInput!]
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
  """users edge predicates"""
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """roles_and_groups edge predicates"""
  hasRolesAndGroups: Boolean
  hasRolesAndGroupsWith: [OrgRoleWhereInput!]
  """permissions edge predicates"""
  hasPermissions: Boolean
  hasPermissionsWith: [PermissionWhereInput!]
  """policies edge predicates"""
  hasPolicies: Boolean
  hasPoliciesWith: [OrgPolicyWhereInput!]
  """apps edge predicates"""
  hasApps: Boolean
  hasAppsWith: [AppWhereInput!]
  """org_user edge predicates"""
  hasOrgUser: Boolean
  hasOrgUserWith: [OrgUserWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Permission implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """授权的域根组织"""
  orgID: ID!
  """授权类型:角色,用户"""
  principalKind: PermissionPrincipalKind!
  """授权类型为用户的ID"""
  userID: ID
  """授权类型为角色或用户组的ID"""
  roleID: Int
  """策略"""
  orgPolicyID: ID!
  """生效开始时间"""
  startAt: Time
  """生效结束时间"""
  endAt: Time
  """状态"""
  status: PermissionSimpleStatus
  org: Org!
  user: User
  orgPolicy: OrgPolicy!
}
"""A connection to a list of items."""
type PermissionConnection {
  """A list of edges."""
  edges: [PermissionEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PermissionEdge {
  """The item at the end of the edge."""
  node: Permission
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Permission connections"""
input PermissionOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Permissions."""
  field: PermissionOrderField!
}
"""Properties by which Permission connections can be ordered."""
enum PermissionOrderField {
  createdAt
}
"""PermissionPrincipalKind is enum for the field principal_kind"""
enum PermissionPrincipalKind @goModel(model: "github.com/woocoos/knockout/ent/permission.PrincipalKind") {
  user
  role
}
"""PermissionSimpleStatus is enum for the field status"""
enum PermissionSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
PermissionWhereInput is used for filtering Permission objects.
Input was generated by ent.
"""
input PermissionWhereInput {
  not: PermissionWhereInput
  and: [PermissionWhereInput!]
  or: [PermissionWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """org_id field predicates"""
  orgID: ID
  orgIDNEQ: ID
  orgIDIn: [ID!]
  orgIDNotIn: [ID!]
  """principal_kind field predicates"""
  principalKind: PermissionPrincipalKind
  principalKindNEQ: PermissionPrincipalKind
  principalKindIn: [PermissionPrincipalKind!]
  principalKindNotIn: [PermissionPrincipalKind!]
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """role_id field predicates"""
  roleID: Int
  roleIDNEQ: Int
  roleIDIn: [Int!]
  roleIDNotIn: [Int!]
  roleIDGT: Int
  roleIDGTE: Int
  roleIDLT: Int
  roleIDLTE: Int
  roleIDIsNil: Boolean
  roleIDNotNil: Boolean
  """org_policy_id field predicates"""
  orgPolicyID: ID
  orgPolicyIDNEQ: ID
  orgPolicyIDIn: [ID!]
  orgPolicyIDNotIn: [ID!]
  """start_at field predicates"""
  startAt: Time
  startAtNEQ: Time
  startAtIn: [Time!]
  startAtNotIn: [Time!]
  startAtGT: Time
  startAtGTE: Time
  startAtLT: Time
  startAtLTE: Time
  startAtIsNil: Boolean
  startAtNotNil: Boolean
  """end_at field predicates"""
  endAt: Time
  endAtNEQ: Time
  endAtIn: [Time!]
  endAtNotIn: [Time!]
  endAtGT: Time
  endAtGTE: Time
  endAtLT: Time
  endAtLTE: Time
  endAtIsNil: Boolean
  endAtNotNil: Boolean
  """status field predicates"""
  status: PermissionSimpleStatus
  statusNEQ: PermissionSimpleStatus
  statusIn: [PermissionSimpleStatus!]
  statusNotIn: [PermissionSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """org edge predicates"""
  hasOrg: Boolean
  hasOrgWith: [OrgWhereInput!]
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """org_policy edge predicates"""
  hasOrgPolicy: Boolean
  hasOrgPolicyWith: [OrgPolicyWhereInput!]
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: GID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [GID!]!
  ): [Node]!
  """公开应用查询"""
  apps(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Apps returned from the connection."""
    orderBy: AppOrder

    """Filtering options for Apps returned from the connection."""
    where: AppWhereInput
  ): AppConnection!
  organizations(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Orgs returned from the connection."""
    orderBy: OrgOrder

    """Filtering options for Orgs returned from the connection."""
    where: OrgWhereInput
  ): OrgConnection!
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Users returned from the connection."""
    orderBy: UserOrder

    """Filtering options for Users returned from the connection."""
    where: UserWhereInput
  ): UserConnection!
}
"""The builtin Time type"""
scalar Time
"""
UpdateAppActionInput is used for update AppAction object.
Input was generated by ent.
"""
input UpdateAppActionInput {
  """名称"""
  name: String
  """restful,graphql,rpc"""
  kind: AppActionKind
  """操作方法:读,写,列表"""
  method: AppActionMethod
  """备注"""
  comments: String
  clearComments: Boolean
  addMenuIDs: [ID!]
  removeMenuIDs: [ID!]
  clearMenus: Boolean
  addResourceIDs: [ID!]
  removeResourceIDs: [ID!]
  clearResources: Boolean
}
"""
UpdateAppInput is used for update App object.
Input was generated by ent.
"""
input UpdateAppInput {
  """名称"""
  name: String
  """应用类型"""
  kind: AppKind
  """回调地址"""
  redirectURI: String
  clearRedirectURI: Boolean
  """应用ID"""
  appKey: String
  clearAppKey: Boolean
  """应用密钥"""
  appSecret: String
  clearAppSecret: Boolean
  """权限范围"""
  scopes: String
  clearScopes: Boolean
  """token有效期"""
  tokenValidity: Int
  clearTokenValidity: Boolean
  """refresh_token有效期"""
  refreshTokenValidity: Int
  clearRefreshTokenValidity: Boolean
  """图标"""
  logo: String
  clearLogo: Boolean
  """备注"""
  comments: String
  clearComments: Boolean
  """状态"""
  status: AppSimpleStatus
  clearStatus: Boolean
  addMenuIDs: [ID!]
  removeMenuIDs: [ID!]
  clearMenus: Boolean
  addActionIDs: [ID!]
  removeActionIDs: [ID!]
  clearActions: Boolean
  addResourceIDs: [ID!]
  removeResourceIDs: [ID!]
  clearResources: Boolean
  addRoleIDs: [ID!]
  removeRoleIDs: [ID!]
  clearRoles: Boolean
  addPolicyIDs: [ID!]
  removePolicyIDs: [ID!]
  clearPolicies: Boolean
}
"""
UpdateAppMenuInput is used for update AppMenu object.
Input was generated by ent.
"""
input UpdateAppMenuInput {
  """父级ID"""
  parentID: Int
  """目录,菜单项"""
  kind: AppMenuKind
  """菜单名称"""
  name: String
  """备注"""
  comments: String
  clearComments: Boolean
  actionID: ID
  clearAction: Boolean
}
"""
UpdateAppPolicyInput is used for update AppPolicy object.
Input was generated by ent.
"""
input UpdateAppPolicyInput {
  """策略名称"""
  name: String
  """描述"""
  comments: String
  clearComments: Boolean
  """策略规则"""
  rules: [PolicyRuleInput!]
  appendRules: [PolicyRuleInput!]
  """版本号"""
  version: String
  """标识是否自动授予到账户"""
  autoGrant: Boolean
  """状态"""
  status: AppPolicySimpleStatus
  clearStatus: Boolean
  addRoleIDs: [ID!]
  removeRoleIDs: [ID!]
  clearRoles: Boolean
}
"""
UpdateAppResInput is used for update AppRes object.
Input was generated by ent.
"""
input UpdateAppResInput {
  """资源名称"""
  name: String
  """资源类型名称,如数据库表名"""
  typeName: String
  """应用资源表达式"""
  arnPattern: String
}
"""
UpdateAppRoleInput is used for update AppRole object.
Input was generated by ent.
"""
input UpdateAppRoleInput {
  """角色名称"""
  name: String
  """备注"""
  comments: String
  clearComments: Boolean
  """标识是否自动授予到账户"""
  autoGrant: Boolean
  """授权后是否可编辑"""
  editable: Boolean
  addPolicyIDs: [ID!]
  removePolicyIDs: [ID!]
  clearPolicies: Boolean
}
"""
UpdateOrgInput is used for update Org object.
Input was generated by ent.
"""
input UpdateOrgInput {
  """默认域名"""
  domain: String
  clearDomain: Boolean
  """组织名称"""
  name: String
  """简介"""
  profile: String
  clearProfile: Boolean
  """状态"""
  status: OrgSimpleStatus
  clearStatus: Boolean
  """国家或地区2字码"""
  countryCode: String
  clearCountryCode: Boolean
  """时区"""
  timezone: String
  clearTimezone: Boolean
  parentID: ID
  clearParent: Boolean
  addChildIDs: [ID!]
  removeChildIDs: [ID!]
  clearChildren: Boolean
  ownerID: ID
  clearOwner: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
  addRolesAndGroupIDs: [ID!]
  removeRolesAndGroupIDs: [ID!]
  clearRolesAndGroups: Boolean
  addPermissionIDs: [ID!]
  removePermissionIDs: [ID!]
  clearPermissions: Boolean
  addPolicyIDs: [ID!]
  removePolicyIDs: [ID!]
  clearPolicies: Boolean
  addAppIDs: [ID!]
  removeAppIDs: [ID!]
  clearApps: Boolean
}
"""
UpdateOrgPolicyInput is used for update OrgPolicy object.
Input was generated by ent.
"""
input UpdateOrgPolicyInput {
  """所属应用策略,如果是自定义应用策略,则为空"""
  appPolicyID: Int
  clearAppPolicyID: Boolean
  """策略名称"""
  name: String
  """描述"""
  comments: String
  clearComments: Boolean
  """策略规则,如果是应用策略,则为空"""
  rules: [PolicyRuleInput!]
  appendRules: [PolicyRuleInput!]
  orgID: ID
  clearOrg: Boolean
  addPermissionIDs: [ID!]
  removePermissionIDs: [ID!]
  clearPermissions: Boolean
}
"""
UpdateOrgRoleInput is used for update OrgRole object.
Input was generated by ent.
"""
input UpdateOrgRoleInput {
  """类型,group:组,role:角色"""
  kind: OrgRoleKind
  """名称"""
  name: String
  """备注"""
  comments: String
  clearComments: Boolean
}
"""
UpdateOrgUserInput is used for update OrgUser object.
Input was generated by ent.
"""
input UpdateOrgUserInput {
  """加入时间"""
  joinedAt: Time
  """在组织内的显示名称"""
  displayName: String
  orgID: ID
  clearOrg: Boolean
  userID: ID
  clearUser: Boolean
}
"""
UpdatePermissionInput is used for update Permission object.
Input was generated by ent.
"""
input UpdatePermissionInput {
  """生效开始时间"""
  startAt: Time
  clearStartAt: Boolean
  """生效结束时间"""
  endAt: Time
  clearEndAt: Boolean
  """状态"""
  status: PermissionSimpleStatus
  clearStatus: Boolean
}
"""
UpdateUserIdentityInput is used for update UserIdentity object.
Input was generated by ent.
"""
input UpdateUserIdentityInput {
  """身份标识类型 手机、邮箱、用户名、微信、qq"""
  kind: UserIdentityKind
  """用户名、邮箱、手机、unionid、qq"""
  code: String
  clearCode: Boolean
  """扩展标识码,比如微信的openID"""
  codeExtend: String
  clearCodeExtend: Boolean
  """状态,部分登陆方式需要验证通过才可启用"""
  status: UserIdentitySimpleStatus
  clearStatus: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  """登陆名称"""
  principalName: String
  """显示名"""
  displayName: String
  """邮箱"""
  email: String
  clearEmail: Boolean
  """手机"""
  mobile: String
  clearMobile: Boolean
  """备注"""
  comments: String
  clearComments: Boolean
}
"""
UpdateUserLoginProfileInput is used for update UserLoginProfile object.
Input was generated by ent.
"""
input UpdateUserLoginProfileInput {
  """是否允许使用密码登陆控制台"""
  canLogin: Boolean
  clearCanLogin: Boolean
  """设置密码:keep-保持不变,customer-客户自行设置,auto-自动生成"""
  setKind: UserLoginProfileSetKind
  """下次登陆时需要重置密码"""
  passwordReset: Boolean
  clearPasswordReset: Boolean
  """是否开启设备认证"""
  verifyDevice: Boolean
  """是否开启多因素验证"""
  mfaEnabled: Boolean
  clearMfaEnabled: Boolean
  """多因素验证密钥BASE32"""
  mfaSecret: String
  clearMfaSecret: Boolean
  """多因素验证状态"""
  mfaStatus: UserLoginProfileSimpleStatus
  clearMfaStatus: Boolean
}
"""
UpdateUserPasswordInput is used for update UserPassword object.
Input was generated by ent.
"""
input UpdateUserPasswordInput {
  """场景: login 普通登陆"""
  scene: UserPasswordScene
  """密码"""
  password: String
  clearPassword: Boolean
  """生效状态,默认生效"""
  status: UserPasswordSimpleStatus
  clearStatus: Boolean
}
type User implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  deletedAt: Time
  """登陆名称"""
  principalName: String!
  """显示名"""
  displayName: String!
  """邮箱"""
  email: String
  """手机"""
  mobile: String
  """用户类型"""
  userType: UserUserType!
  """创建类型,邀请，注册,手工创建"""
  creationType: UserCreationType!
  """注册时IP"""
  registerIP: String!
  """状态"""
  status: UserSimpleStatus
  """备注"""
  comments: String
  """用户身份标识"""
  identities: [UserIdentity!]
  """登陆设置"""
  loginProfile: UserLoginProfile
  """用户密码"""
  passwords: [UserPassword!]
  """用户设备"""
  devices: [UserDevice!]
  permissions(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Permissions returned from the connection."""
    orderBy: PermissionOrder

    """Filtering options for Permissions returned from the connection."""
    where: PermissionWhereInput
  ): PermissionConnection!
}
"""A connection to a list of items."""
type UserConnection {
  """A list of edges."""
  edges: [UserEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""UserCreationType is enum for the field creation_type"""
enum UserCreationType @goModel(model: "github.com/woocoos/knockout/ent/user.CreationType") {
  invitation
  register
  manual
}
type UserDevice implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  userID: ID
  """设备唯一ID"""
  deviceUID: String!
  deviceName: String
  systemName: String
  systemVersion: String
  appVersion: String
  deviceModel: String
  """状态,可用或不可用及其他待确认状态"""
  status: UserDeviceSimpleStatus
  """备注"""
  comments: String
  user: User
}
"""Ordering options for UserDevice connections"""
input UserDeviceOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order UserDevices."""
  field: UserDeviceOrderField!
}
"""Properties by which UserDevice connections can be ordered."""
enum UserDeviceOrderField {
  createdAt
}
"""UserDeviceSimpleStatus is enum for the field status"""
enum UserDeviceSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
UserDeviceWhereInput is used for filtering UserDevice objects.
Input was generated by ent.
"""
input UserDeviceWhereInput {
  not: UserDeviceWhereInput
  and: [UserDeviceWhereInput!]
  or: [UserDeviceWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """device_uid field predicates"""
  deviceUID: String
  deviceUIDNEQ: String
  deviceUIDIn: [String!]
  deviceUIDNotIn: [String!]
  deviceUIDGT: String
  deviceUIDGTE: String
  deviceUIDLT: String
  deviceUIDLTE: String
  deviceUIDContains: String
  deviceUIDHasPrefix: String
  deviceUIDHasSuffix: String
  deviceUIDEqualFold: String
  deviceUIDContainsFold: String
  """device_name field predicates"""
  deviceName: String
  deviceNameNEQ: String
  deviceNameIn: [String!]
  deviceNameNotIn: [String!]
  deviceNameGT: String
  deviceNameGTE: String
  deviceNameLT: String
  deviceNameLTE: String
  deviceNameContains: String
  deviceNameHasPrefix: String
  deviceNameHasSuffix: String
  deviceNameIsNil: Boolean
  deviceNameNotNil: Boolean
  deviceNameEqualFold: String
  deviceNameContainsFold: String
  """system_name field predicates"""
  systemName: String
  systemNameNEQ: String
  systemNameIn: [String!]
  systemNameNotIn: [String!]
  systemNameGT: String
  systemNameGTE: String
  systemNameLT: String
  systemNameLTE: String
  systemNameContains: String
  systemNameHasPrefix: String
  systemNameHasSuffix: String
  systemNameIsNil: Boolean
  systemNameNotNil: Boolean
  systemNameEqualFold: String
  systemNameContainsFold: String
  """system_version field predicates"""
  systemVersion: String
  systemVersionNEQ: String
  systemVersionIn: [String!]
  systemVersionNotIn: [String!]
  systemVersionGT: String
  systemVersionGTE: String
  systemVersionLT: String
  systemVersionLTE: String
  systemVersionContains: String
  systemVersionHasPrefix: String
  systemVersionHasSuffix: String
  systemVersionIsNil: Boolean
  systemVersionNotNil: Boolean
  systemVersionEqualFold: String
  systemVersionContainsFold: String
  """app_version field predicates"""
  appVersion: String
  appVersionNEQ: String
  appVersionIn: [String!]
  appVersionNotIn: [String!]
  appVersionGT: String
  appVersionGTE: String
  appVersionLT: String
  appVersionLTE: String
  appVersionContains: String
  appVersionHasPrefix: String
  appVersionHasSuffix: String
  appVersionIsNil: Boolean
  appVersionNotNil: Boolean
  appVersionEqualFold: String
  appVersionContainsFold: String
  """device_model field predicates"""
  deviceModel: String
  deviceModelNEQ: String
  deviceModelIn: [String!]
  deviceModelNotIn: [String!]
  deviceModelGT: String
  deviceModelGTE: String
  deviceModelLT: String
  deviceModelLTE: String
  deviceModelContains: String
  deviceModelHasPrefix: String
  deviceModelHasSuffix: String
  deviceModelIsNil: Boolean
  deviceModelNotNil: Boolean
  deviceModelEqualFold: String
  deviceModelContainsFold: String
  """status field predicates"""
  status: UserDeviceSimpleStatus
  statusNEQ: UserDeviceSimpleStatus
  statusIn: [UserDeviceSimpleStatus!]
  statusNotIn: [UserDeviceSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User
  """A cursor for use in pagination."""
  cursor: Cursor!
}
type UserIdentity implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  userID: ID
  """身份标识类型 手机、邮箱、用户名、微信、qq"""
  kind: UserIdentityKind!
  """用户名、邮箱、手机、unionid、qq"""
  code: String
  """扩展标识码,比如微信的openID"""
  codeExtend: String
  """状态,部分登陆方式需要验证通过才可启用"""
  status: UserIdentitySimpleStatus
  user: User
}
"""UserIdentityKind is enum for the field kind"""
enum UserIdentityKind @goModel(model: "github.com/woocoos/knockout/ent/useridentity.Kind") {
  name
  email
  phone
  wechat
  qq
}
"""Ordering options for UserIdentity connections"""
input UserIdentityOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order UserIdentities."""
  field: UserIdentityOrderField!
}
"""Properties by which UserIdentity connections can be ordered."""
enum UserIdentityOrderField {
  createdAt
}
"""UserIdentitySimpleStatus is enum for the field status"""
enum UserIdentitySimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
UserIdentityWhereInput is used for filtering UserIdentity objects.
Input was generated by ent.
"""
input UserIdentityWhereInput {
  not: UserIdentityWhereInput
  and: [UserIdentityWhereInput!]
  or: [UserIdentityWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """kind field predicates"""
  kind: UserIdentityKind
  kindNEQ: UserIdentityKind
  kindIn: [UserIdentityKind!]
  kindNotIn: [UserIdentityKind!]
  """code field predicates"""
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIsNil: Boolean
  codeNotNil: Boolean
  codeEqualFold: String
  codeContainsFold: String
  """code_extend field predicates"""
  codeExtend: String
  codeExtendNEQ: String
  codeExtendIn: [String!]
  codeExtendNotIn: [String!]
  codeExtendGT: String
  codeExtendGTE: String
  codeExtendLT: String
  codeExtendLTE: String
  codeExtendContains: String
  codeExtendHasPrefix: String
  codeExtendHasSuffix: String
  codeExtendIsNil: Boolean
  codeExtendNotNil: Boolean
  codeExtendEqualFold: String
  codeExtendContainsFold: String
  """status field predicates"""
  status: UserIdentitySimpleStatus
  statusNEQ: UserIdentitySimpleStatus
  statusIn: [UserIdentitySimpleStatus!]
  statusNotIn: [UserIdentitySimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
type UserLoginProfile implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  userID: ID
  lastLoginIP: String
  """最后登陆时间"""
  lastLoginAt: Time
  """是否允许使用密码登陆控制台"""
  canLogin: Boolean
  """设置密码:keep-保持不变,customer-客户自行设置,auto-自动生成"""
  setKind: UserLoginProfileSetKind!
  """下次登陆时需要重置密码"""
  passwordReset: Boolean
  """是否开启设备认证"""
  verifyDevice: Boolean!
  """是否开启多因素验证"""
  mfaEnabled: Boolean
  """多因素验证状态"""
  mfaStatus: UserLoginProfileSimpleStatus
  user: User
}
"""Ordering options for UserLoginProfile connections"""
input UserLoginProfileOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order UserLoginProfiles."""
  field: UserLoginProfileOrderField!
}
"""Properties by which UserLoginProfile connections can be ordered."""
enum UserLoginProfileOrderField {
  createdAt
}
"""UserLoginProfileSetKind is enum for the field set_kind"""
enum UserLoginProfileSetKind @goModel(model: "github.com/woocoos/knockout/ent/userloginprofile.SetKind") {
  keep
  customer
  auto
}
"""UserLoginProfileSimpleStatus is enum for the field mfa_status"""
enum UserLoginProfileSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
UserLoginProfileWhereInput is used for filtering UserLoginProfile objects.
Input was generated by ent.
"""
input UserLoginProfileWhereInput {
  not: UserLoginProfileWhereInput
  and: [UserLoginProfileWhereInput!]
  or: [UserLoginProfileWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """can_login field predicates"""
  canLogin: Boolean
  canLoginNEQ: Boolean
  canLoginIsNil: Boolean
  canLoginNotNil: Boolean
  """set_kind field predicates"""
  setKind: UserLoginProfileSetKind
  setKindNEQ: UserLoginProfileSetKind
  setKindIn: [UserLoginProfileSetKind!]
  setKindNotIn: [UserLoginProfileSetKind!]
  """password_reset field predicates"""
  passwordReset: Boolean
  passwordResetNEQ: Boolean
  passwordResetIsNil: Boolean
  passwordResetNotNil: Boolean
  """verify_device field predicates"""
  verifyDevice: Boolean
  verifyDeviceNEQ: Boolean
  """mfa_enabled field predicates"""
  mfaEnabled: Boolean
  mfaEnabledNEQ: Boolean
  mfaEnabledIsNil: Boolean
  mfaEnabledNotNil: Boolean
  """mfa_status field predicates"""
  mfaStatus: UserLoginProfileSimpleStatus
  mfaStatusNEQ: UserLoginProfileSimpleStatus
  mfaStatusIn: [UserLoginProfileSimpleStatus!]
  mfaStatusNotIn: [UserLoginProfileSimpleStatus!]
  mfaStatusIsNil: Boolean
  mfaStatusNotNil: Boolean
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
"""Ordering options for User connections"""
input UserOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Users."""
  field: UserOrderField!
}
"""Properties by which User connections can be ordered."""
enum UserOrderField {
  createdAt
}
type UserPassword implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  userID: ID
  """场景: login 普通登陆"""
  scene: UserPasswordScene!
  """生效状态,默认生效"""
  status: UserPasswordSimpleStatus
  user: User
}
"""Ordering options for UserPassword connections"""
input UserPasswordOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order UserPasswords."""
  field: UserPasswordOrderField!
}
"""Properties by which UserPassword connections can be ordered."""
enum UserPasswordOrderField {
  createdAt
}
"""UserPasswordScene is enum for the field scene"""
enum UserPasswordScene @goModel(model: "github.com/woocoos/knockout/ent/userpassword.Scene") {
  login
}
"""UserPasswordSimpleStatus is enum for the field status"""
enum UserPasswordSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
UserPasswordWhereInput is used for filtering UserPassword objects.
Input was generated by ent.
"""
input UserPasswordWhereInput {
  not: UserPasswordWhereInput
  and: [UserPasswordWhereInput!]
  or: [UserPasswordWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """scene field predicates"""
  scene: UserPasswordScene
  sceneNEQ: UserPasswordScene
  sceneIn: [UserPasswordScene!]
  sceneNotIn: [UserPasswordScene!]
  """status field predicates"""
  status: UserPasswordSimpleStatus
  statusNEQ: UserPasswordSimpleStatus
  statusIn: [UserPasswordSimpleStatus!]
  statusNotIn: [UserPasswordSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
"""UserSimpleStatus is enum for the field status"""
enum UserSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""UserUserType is enum for the field user_type"""
enum UserUserType @goModel(model: "github.com/woocoos/knockout/ent/user.UserType") {
  account
  member
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """deleted_at field predicates"""
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """principal_name field predicates"""
  principalName: String
  principalNameNEQ: String
  principalNameIn: [String!]
  principalNameNotIn: [String!]
  principalNameGT: String
  principalNameGTE: String
  principalNameLT: String
  principalNameLTE: String
  principalNameContains: String
  principalNameHasPrefix: String
  principalNameHasSuffix: String
  principalNameEqualFold: String
  principalNameContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """email field predicates"""
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIsNil: Boolean
  emailNotNil: Boolean
  emailEqualFold: String
  emailContainsFold: String
  """mobile field predicates"""
  mobile: String
  mobileNEQ: String
  mobileIn: [String!]
  mobileNotIn: [String!]
  mobileGT: String
  mobileGTE: String
  mobileLT: String
  mobileLTE: String
  mobileContains: String
  mobileHasPrefix: String
  mobileHasSuffix: String
  mobileIsNil: Boolean
  mobileNotNil: Boolean
  mobileEqualFold: String
  mobileContainsFold: String
  """creation_type field predicates"""
  creationType: UserCreationType
  creationTypeNEQ: UserCreationType
  creationTypeIn: [UserCreationType!]
  creationTypeNotIn: [UserCreationType!]
  """register_ip field predicates"""
  registerIP: String
  registerIPNEQ: String
  registerIPIn: [String!]
  registerIPNotIn: [String!]
  registerIPGT: String
  registerIPGTE: String
  registerIPLT: String
  registerIPLTE: String
  registerIPContains: String
  registerIPHasPrefix: String
  registerIPHasSuffix: String
  registerIPEqualFold: String
  registerIPContainsFold: String
  """status field predicates"""
  status: UserSimpleStatus
  statusNEQ: UserSimpleStatus
  statusIn: [UserSimpleStatus!]
  statusNotIn: [UserSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """identities edge predicates"""
  hasIdentities: Boolean
  hasIdentitiesWith: [UserIdentityWhereInput!]
  """login_profile edge predicates"""
  hasLoginProfile: Boolean
  hasLoginProfileWith: [UserLoginProfileWhereInput!]
  """passwords edge predicates"""
  hasPasswords: Boolean
  hasPasswordsWith: [UserPasswordWhereInput!]
  """devices edge predicates"""
  hasDevices: Boolean
  hasDevicesWith: [UserDeviceWhereInput!]
  """permissions edge predicates"""
  hasPermissions: Boolean
  hasPermissionsWith: [PermissionWhereInput!]
}
