// Code generated by woco, DO NOT EDIT.

package file

import (
	"fmt"

	"github.com/gin-gonic/gin"
)

// FileService is the server API for File service.
type FileServer interface {
	// DeleteFile delete file
	// (DELETE /files/{fileId})
	DeleteFile(*gin.Context, *DeleteFileRequest) error
	// GetFile get file info
	// (GET /files/{fileId})
	GetFile(*gin.Context, *GetFileRequest) (*FileInfo, error)
	// GetFileRaw get file
	// (GET /files/{fileId}/raw)
	GetFileRaw(*gin.Context, *GetFileRawRequest) ([]byte, error)
	// ReportRefCount number of times that the file is referenced by business
	// (POST /files/report-ref-count)
	ReportRefCount(*gin.Context, *ReportRefCountRequest) (bool, error)
	// UploadFile upload file
	// (POST /files)
	UploadFile(*gin.Context, *UploadFileRequest) (string, error)
	// UploadFileInfo upload the file info for oss
	// (POST /files/upload-info)
	UploadFileInfo(*gin.Context, *UploadFileInfoRequest) (string, error)
}

type UnimplementedFileServer struct {
}

func (UnimplementedFileServer) DeleteFile(c *gin.Context, req *DeleteFileRequest) (err error) {
	err = fmt.Errorf("method DeleteFile not implemented")
	return
}

func (UnimplementedFileServer) GetFile(c *gin.Context, req *GetFileRequest) (_ *FileInfo, err error) {
	err = fmt.Errorf("method GetFile not implemented")
	return
}

func (UnimplementedFileServer) GetFileRaw(c *gin.Context, req *GetFileRawRequest) (_ []byte, err error) {
	err = fmt.Errorf("method GetFileRaw not implemented")
	return
}

func (UnimplementedFileServer) ReportRefCount(c *gin.Context, req *ReportRefCountRequest) (_ bool, err error) {
	err = fmt.Errorf("method ReportRefCount not implemented")
	return
}

func (UnimplementedFileServer) UploadFile(c *gin.Context, req *UploadFileRequest) (_ string, err error) {
	err = fmt.Errorf("method UploadFile not implemented")
	return
}

func (UnimplementedFileServer) UploadFileInfo(c *gin.Context, req *UploadFileInfoRequest) (_ string, err error) {
	err = fmt.Errorf("method UploadFileInfo not implemented")
	return
}
