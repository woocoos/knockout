// Code generated by woco, DO NOT EDIT.

package auth

// BindMfaRequest is the request object for (POST /mfa/bind)
type BindMfaRequest struct {
	OtpToken   string `binding:"required" json:"otpToken"`
	StateToken string `binding:"required" json:"stateToken"`
}

// CaptchaRequest is the request object for (GET /captcha)
type CaptchaRequest struct {
	// W width of captcha
	W *int `form:"w"`
	// H height of captcha
	H *int `form:"h"`
}

// ForgetPwdBeginRequest is the request object for (POST /forget-pwd/begin)
type ForgetPwdBeginRequest struct {
	Captcha   string `binding:"required" json:"captcha"`
	CaptchaId string `binding:"required" json:"captchaId"`
	Username  string `binding:"required" json:"username"`
}

// ForgetPwdResetRequest is the request object for (POST /forget-pwd/reset)
type ForgetPwdResetRequest struct {
	NewPassword string `binding:"required" json:"newPassword"`
	// StateToken from verify-mfa or verify-email
	StateToken string `binding:"required" json:"stateToken"`
}

// ForgetPwdSendEmailRequest is the request object for (POST /forget-pwd/send-email)
type ForgetPwdSendEmailRequest struct {
	// StateToken form begin
	StateToken string `binding:"required" json:"stateToken"`
}

// ForgetPwdVerifyEmailRequest is the request object for (POST /forget-pwd/verify-email)
type ForgetPwdVerifyEmailRequest struct {
	// Captcha the email verify code
	Captcha string `binding:"required" json:"captcha"`
	// CaptchaId the email verify code
	CaptchaId string `binding:"required" json:"captchaId"`
	// StateToken form begin
	StateToken string `binding:"required" json:"stateToken"`
}

// ForgetPwdVerifyMfaRequest is the request object for (POST /forget-pwd/verify-mfa)
type ForgetPwdVerifyMfaRequest struct {
	// OtpToken the email verify code
	OtpToken string `binding:"required" json:"otpToken"`
	// StateToken form begin
	StateToken string `binding:"required" json:"stateToken"`
}

// GetSpmAuthRequest is the request object for (POST /spm/auth)
type GetSpmAuthRequest struct {
	// Spm the spm key to get auth data
	Spm string `binding:"required" json:"spm"`
}

// LoginRequest is the request object for (POST /login/auth)
type LoginRequest struct {
	// Captcha captcha code,if login fail 3 times, the login profile will demand captcha.
	Captcha string `json:"captcha,omitempty"`
	// CaptchaId captcha id,if login fail 3 times, the login profile will demand captcha.
	CaptchaId string `json:"captchaId,omitempty"`
	// Password hashed password
	Password string `binding:"required" json:"password"`
	// Username username or email
	Username string `binding:"required" json:"username"`
}

// RefreshTokenRequest is the request object for (POST /login/refresh-token)
type RefreshTokenRequest struct {
	// RefreshToken the refreshToken
	RefreshToken string `binding:"required" json:"refreshToken"`
}

// ResetPasswordRequest is the request object for (POST /login/reset-password)
type ResetPasswordRequest struct {
	NewPassword string `binding:"required" json:"newPassword"`
	StateToken  string `binding:"required" json:"stateToken"`
}

// TokenRequest is the request object for (POST /token)
type TokenRequest struct {
	ClientID     string `binding:"required" form:"client_id"`
	ClientSecret string `binding:"required" form:"client_secret"`
	GrantType    string `binding:"required" form:"grant_type"`
}

// TokenResponse successful operation
type TokenResponse struct {
	AccessToken string `json:"access_token,omitempty"`
	ExpiresIn   int    `json:"expires_in,omitempty"`
}

// UnBindMfaRequest is the request object for (POST /mfa/unbind)
type UnBindMfaRequest struct {
	OtpToken string `binding:"required" json:"otpToken"`
}

// VerifyFactorRequest is the request object for (POST /login/verify-factor)
type VerifyFactorRequest struct {
	// DeviceId provide the MFA deviceId. the deviceId is register by MFA setting.
	DeviceId   string `binding:"required" json:"deviceId"`
	OtpToken   string `binding:"required" json:"otpToken"`
	StateToken string `binding:"required" json:"stateToken"`
}
