// Code generated by woco, DO NOT EDIT.

package oas

import (
	"context"
	"fmt"
)

// Server is the server API for  service.
type Server interface {
	// (POST /login/auth)
	Auth(context.Context, *AuthRequest) (*LoginResponse, error)
	// (POST /logout)
	Logout(context.Context) error
	// (POST /login/reset-password)
	ResetPassword(context.Context, *ResetPasswordRequest) (*LoginResponse, error)
	// (POST /login/verify-factor)
	VerifyFactor(context.Context, *VerifyFactorRequest) (*LoginResponse, error)
}

type UnimplementedServer struct {
}

func (UnimplementedServer) Auth(ctx context.Context, req *AuthRequest) (_ *LoginResponse, err error) {
	err = fmt.Errorf("method Auth not implemented")
	return
}

func (UnimplementedServer) Logout(ctx context.Context) (err error) {
	err = fmt.Errorf("method Logout not implemented")
	return
}

func (UnimplementedServer) ResetPassword(ctx context.Context, req *ResetPasswordRequest) (_ *LoginResponse, err error) {
	err = fmt.Errorf("method ResetPassword not implemented")
	return
}

func (UnimplementedServer) VerifyFactor(ctx context.Context, req *VerifyFactorRequest) (_ *LoginResponse, err error) {
	err = fmt.Errorf("method VerifyFactor not implemented")
	return
}
